import streamlit as st
from PIL import Image
import requests
from io import BytesIO
import torch
import matplotlib.pyplot as plt

st.set_page_config(page_title="Object Detection (Bus, People, Bike, Tree)", layout="centered")
st.title("üöÄ Object Detection: Bus, Person, Bike, Tree")

# üîó ‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢
image_url = "https://images.pexels.com/photos/3803835/pexels-photo-3803835.jpeg?auto=compress&cs=tinysrgb&h=640"

# ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL
response = requests.get(image_url)
image = Image.open(BytesIO(response.content)).convert("RGB")

st.image(image, caption="üì∏ Input Image", use_container_width=True)

# ‡πÇ‡∏´‡∏•‡∏î YOLOv5 model (‡πÉ‡∏ä‡πâ yolov5s ‡∏ó‡∏µ‡πà‡πÄ‡∏ö‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡πá‡∏ß)
st.subheader("üîç Detecting objects...")
model = torch.hub.load('ultralytics/yolov5', 'yolov5s', trust_repo=True)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏
results = model(image)

# ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
allowed_classes = {'bus', 'person', 'bicycle'}  # YOLOv5 ‡πÉ‡∏ä‡πâ 'person', 'bicycle' ‡πÅ‡∏ó‡∏ô man/woman/bike

df = results.pandas().xyxy[0]
filtered_df = df[df['name'].isin(allowed_classes)]

# ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö
st.markdown("### üìù Detected Objects:")
if not filtered_df.empty:
    for label in sorted(filtered_df['name'].unique()):
        count = filtered_df[filtered_df['name'] == label].shape[0]
        st.write(f"- {label} (x{count})")
else:
    st.write("No target objects (bus, person, bicycle) found.")

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏£‡πâ‡∏≠‡∏° Bounding Boxes
st.subheader("üñºÔ∏è Detection with Bounding Boxes")
fig, ax = plt.subplots()
results.render()
ax.imshow(results.ims[0])
ax.axis('off')
st.pyplot(fig)
